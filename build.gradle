plugins {
    id 'org.springframework.boot' version '2.6.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'jacoco'
}

group = 'com.wini'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

//-- jacoco : code coverage
jacoco{
    toolVersion = "0.8.7"
}

jacocoTestReport {
    reports {
        html.enabled true
        csv.enabled false
        xml.enabled true
    }

    def ePatterns = []
    for(pattern in "**/QA" .. "**/QZ"){
        ePatterns.add(pattern+"*")
    }

    afterEvaluate {

        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it,
                    excludes: [
                            '**/DemoApplication*'
                    ]
            //                + ePatterns
            )
        }))
    }

    finalizedBy 'jacocoTestCoverageVerification'
}

jacocoTestCoverageVerification {
    def ePatterns = []
    for (pattern in "*.QA" .. "*.QZ") { // pattern = "*.QA","*.QB","*.QC", ... "*.QZ"
        ePatterns.add(pattern + "*")
    }

    violationRules {
        rule {
            enabled = true
            element = 'CLASS'

            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.70
            }

            excludes = [
                    'com.wini.demo.DemoApplication*'
            ]
            //+ ePatterns
        }
    }
}

task testCoverage(type: Test) {
    group 'verification'
    description 'Runs the unit tests with coverage'

    dependsOn(':test',
            ':jacocoTestReport',
            ':jacocoTestCoverageVerification')

    tasks['jacocoTestReport'].mustRunAfter(tasks['test'])
    tasks['jacocoTestCoverageVerification'].mustRunAfter(tasks['jacocoTestReport'])
}
//--

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
    finalizedBy 'jacocoTestReport'
}
